a <- rbinom(10, 10, 0.5)
print(a)
a <- rbinom(1, 10, 0.5)
print(a)
a <- rbinom(10, 1, 0.5)
print(a)
a <- round(rnorm(10, 0, 1))
print(a)
a <- round(rnorm(10, 0, 0.5))
print(a)
values <- c(rep(-1, 30), rep(0, 30), rep(1, 30))
a <- sample(values, 10, replace = TRUE)
print(a)
which git
git
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
print(protoA)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
protoA
protoB
protoC
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
low_protoA <- sample(protoA[ ,11:23], 2) <- -1
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
df = data.frame(protoA = sample(values, 23, replace = TRUE), protoB = sample(values, 23, replace = TRUE), protoC = sample(values, 23, replace = TRUE))
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
df = data.frame(protoA = sample(values, 23, replace = TRUE), protoB = sample(values, 23, replace = TRUE), protoC = sample(values, 23, replace = TRUE))
df
