---
title: "Reproducing Hintzman's MINERVA (Part 1)"
author: "Bram Goh"
date: "2023-01-26"
categories: [code]
image: "image.jpg"
---

# Generating category prototypes and exemplars

```{r}
library(tidyverse)
set.seed(30)
values <- c(rep(-1, 50), rep(1, 50))
protoA <- sample(values, 23, replace = TRUE)
protoB <- sample(values, 23, replace = TRUE)
protoC <- sample(values, 23, replace = TRUE)
feat_index <- 11:23

distort_low <- function(x) {
  change_index <- sample(feat_index, 2)
  x_new <- x
  x_new[change_index[1]] <- x_new[change_index[1]] * -1
  x_new[change_index[2]] <- x_new[change_index[2]] * -1
  return(x_new)
}
distort_high <- function(x) {
  change_index <- sample(feat_index, 4)
  x_new <- x
  x_new[change_index[1]] <- x_new[change_index[1]] * -1
  x_new[change_index[2]] <- x_new[change_index[2]] * -1
  x_new[change_index[3]] <- x_new[change_index[3]] * -1
  x_new[change_index[4]] <- x_new[change_index[4]] * -1
  return(x_new)
}

low_A1 <- distort_low(protoA)
low_A2 <- distort_low(protoA)
low_A3 <- distort_low(protoA)
low_B1 <- distort_low(protoB)
low_B2 <- distort_low(protoB)
low_B3 <- distort_low(protoB)
low_B4 <- distort_low(protoB)
low_B5 <- distort_low(protoB)
low_B6 <- distort_low(protoB)
low_C1 <- distort_low(protoC)
low_C2 <- distort_low(protoC)
low_C3 <- distort_low(protoC)
low_C4 <- distort_low(protoC)
low_C5 <- distort_low(protoC)
low_C6 <- distort_low(protoC)
low_C7 <- distort_low(protoC)
low_C8 <- distort_low(protoC) 
low_C9 <- distort_low(protoC)

low_C_full <- rbind(low_C1, low_C2, low_C3, low_C4, low_C5, low_C6, low_C7, low_C8, low_C9)

high_A1 <- distort_high(protoA)
high_B1 <- distort_high(protoB)
high_C1 <- distort_high(protoC)
```

The code works, but is very inelegant and requires a lot of copy and pasting. There has to be a way to automate this with a function so that I can simulate this whole thing 20 times.

```{r}
indexC_high <- seq(1, 23, 1)
for(i in 1:9) {
  temp <- distort_high(protoC)
  indexC_high <- rbind(indexC_high, temp)
}
```

This is faster, but still requires specifying the variable to store it in, the number of exemplars, the function and the prototype. Attempts to create a function to automate this failed, as the dataframe returned (e.g. indexC_high) was unchanged.
