[
  {
    "objectID": "posts/Hintzman1/index.html",
    "href": "posts/Hintzman1/index.html",
    "title": "Reproducing Hintzman’s MINERVA (Part 1)",
    "section": "",
    "text": "#Generating category prototypes and exemplars\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nset.seed(30)\nvalues <- c(rep(-1, 50), rep(1, 50))\nprotoA <- sample(values, 23, replace = TRUE)\nprotoB <- sample(values, 23, replace = TRUE)\nprotoC <- sample(values, 23, replace = TRUE)\nfeat_index <- 11:23\n\ndistort_low <- function(x) {\n  change_index <- sample(feat_index, 2)\n  x_new <- x\n  x_new[change_index[1]] <- x_new[change_index[1]] * -1\n  x_new[change_index[2]] <- x_new[change_index[2]] * -1\n  return(x_new)\n}\ndistort_high <- function(x) {\n  change_index <- sample(feat_index, 4)\n  x_new <- x\n  x_new[change_index[1]] <- x_new[change_index[1]] * -1\n  x_new[change_index[2]] <- x_new[change_index[2]] * -1\n  x_new[change_index[3]] <- x_new[change_index[3]] * -1\n  x_new[change_index[4]] <- x_new[change_index[4]] * -1\n  return(x_new)\n}\n\nlow_A1 <- distort_low(protoA)\nlow_A2 <- distort_low(protoA)\nlow_A3 <- distort_low(protoA)\nlow_B1 <- distort_low(protoB)\nlow_B2 <- distort_low(protoB)\nlow_B3 <- distort_low(protoB)\nlow_B4 <- distort_low(protoB)\nlow_B5 <- distort_low(protoB)\nlow_B6 <- distort_low(protoB)\nlow_C1 <- distort_low(protoC)\nlow_C2 <- distort_low(protoC)\nlow_C3 <- distort_low(protoC)\nlow_C4 <- distort_low(protoC)\nlow_C5 <- distort_low(protoC)\nlow_C6 <- distort_low(protoC)\nlow_C7 <- distort_low(protoC)\nlow_C8 <- distort_low(protoC) \nlow_C9 <- distort_low(protoC)\n\nlow_C_full <- rbind(low_C1, low_C2, low_C3, low_C4, low_C5, low_C6, low_C7, low_C8, low_C9)\n\nhigh_A1 <- distort_high(protoA)\nhigh_B1 <- distort_high(protoB)\nhigh_C1 <- distort_high(protoC)\n\nThe code works, but is very inelegant and requires a lot of copy and pasting. There has to be a way to automate this with a function so that I can simulate this whole thing 20 times.\n\nindexC_high <- seq(1, 23, 1)\nfor(i in 1:9) {\n  temp <- distort_high(protoC)\n  indexC_high <- rbind(indexC_high, temp)\n}\n\nThis is faster, but still requires specifying the variable to store it in, the number of exemplars, the function and the prototype. Attempts to create a function to automate this failed, as the dataframe returned (e.g. indexC_high) was unchanged."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "I’m a millennial and technology is not my forte.\nIn spite of that, here is my attempt at a blog record of things I’ve learned. Here’s to jumping off the deep end…"
  },
  {
    "objectID": "posts/TechSetUp/index.html",
    "href": "posts/TechSetUp/index.html",
    "title": "Setting up the Techymabobs",
    "section": "",
    "text": "Matt introduced me to a ton of new software to download and familiarize myself with.\nQuarto blog\nI updated both R and RStudio, and the Quarto blog works as intended. However, remember to NOT rename the index.qmd etc. files, as that interferes with the seamless rendering process and the blog will not be updated as you render.\nDragging and dropping images still does not work. It would be really convenient if this could be rectified.\nSometime in the near future, I need to refresh my Rmarkdown code wrt to stylistic features, so I can do away with the default blog visuals.\nZotero\nI downloaded Zotero and the Safari plugin, and it seems to work fine. It syncs with R and with Microsoft Word, and my brief tests don’t raise any issues.\nI do have to note that most articles downloaded from Google Scholar do not contain DOI information, so this is something I still have to add in manually.\nGithub Desktop\nDownloading this was the easy part. Committing to changes and publishing/pushing was also not too difficult to figure out.\nThe only roadblock I’ve faced thus far is obtaining the blog URL. After setting the output directory to docs, I get a message saying that the pages failed to be built? I’m not sure how to fix this.\nI’ve noticed also that, while I’ve downloaded Github Desktop, I can’t seem to get the “Create a git repository” option when I start a new project in RStudio. An hour of Googling and troubleshooting has gotten me nowhere, so I’m stumped for now."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Computational Cognition",
    "section": "",
    "text": "A blog record of a computational cognition journey\n\n\n\n\n\n\n\n\n  \n\n\n\n\nReproducing Hintzman’s MINERVA (Part 4)\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nFeb 3, 2023\n\n\nBram Goh\n\n\n\n\n\n\n  \n\n\n\n\nReproducing Hintzman’s MINERVA (Part 3)\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nFeb 1, 2023\n\n\nBram Goh\n\n\n\n\n\n\n  \n\n\n\n\nReproducing Hintzman’s MINERVA (Part 2)\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2023\n\n\nBram Goh\n\n\n\n\n\n\n  \n\n\n\n\nReproducing Hintzman’s MINERVA (Part 1)\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\nBram Goh\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nmisc\n\n\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\nBram Goh\n\n\n\n\n\n\n  \n\n\n\n\nSetting up the Techymabobs\n\n\n\n\n\n\n\ntech\n\n\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\nBram Goh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Hintzman2/index.html",
    "href": "posts/Hintzman2/index.html",
    "title": "Reproducing Hintzman’s MINERVA (Part 2)",
    "section": "",
    "text": "Generating traces and calculating the echo\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nset.seed(30)\nnum_feat <- 13\nnum_name <- 10\nnum_trace <- num_name + num_feat\nvalues <- c(rep(1, 50), rep(-1, 50))\n\n# Generating exemplars with distortions\n\ngen_exemp <- function(num_exemp, num_distort) {\n  \n  name <- sample(values, num_name)\n  name_copies <- matrix(rep(name, num_exemp), nrow = num_exemp, ncol = num_name, byrow = TRUE)\n  \n  feat_raw <- t(replicate(num_exemp, sample(values, num_feat)))\n  feat_filter <- t(replicate(n = num_exemp, sample(c(rep(1, num_feat - num_distort), rep(-1, num_distort)), num_feat)))\n  \n  feat_final <- feat_raw * feat_filter\n\n  exemp <- cbind(name_copies, feat_final)\n  \n  return(exemp)\n}\n\n\nempty_feat <- rep(0, num_feat)\n\nabstraction <- function(n1, n2, n3, num_distort) {\n\n# Generating traces and probes\na <- gen_exemp(n1, num_distort)\nprobe_a <- c(a[1, 1:num_name], empty_feat)\nb <- gen_exemp(n2, num_distort)\nprobe_b <- c(b[1, 1:num_name], empty_feat)\nc <- gen_exemp(n3, num_distort)\nprobe_c <- c(c[1, 1:num_name], empty_feat)\n  \nsm <- rbind(a, b, c)\n  \n# Echo activation function\necho_activation <- function(probe, sec_mem) {\n  e_int <- c()\n      for(i in 1:nrow(sec_mem)){\n          n_rel <- 0\n          temp_sim <- 0\n              for(j in 1:num_trace){\n                   current <- probe[j] * sec_mem[i, j]\n                   temp_sim <- current + temp_sim\n                          if(probe[j] != 0 & sec_mem[i, j] != 0) {\n                                     n_rel <- n_rel + 1\n      }\n}\ntrace_sim <- temp_sim/n_rel\ntrace_act <- trace_sim^3\ne_int <- c(e_int, trace_act)\n      }\n  return(e_int)\n}\n\nactivs_a <- echo_activation(probe_a, sm)\nactivs_b <- echo_activation(probe_b, sm)\nactivs_c <- echo_activation(probe_c, sm)\n\n# Echo content function\n\necho_content <- function(acts, sec_mem) {\n  e_cont <- c()\n  for(j in 1:num_trace){\n    temp_cont <- 0\n    for(i in 1:nrow(sec_mem)){\n      current <- acts[i] * sec_mem[i, j]\n      temp_cont <- current + temp_cont\n    }\n    e_cont <- c(e_cont, temp_cont)\n  }\n  return(e_cont)\n}\n\n# Calculating echo intensity and probe-echo correlations\necho_a <- round(echo_content(activs_a, sm), 3)\ncor_a <- cor(probe_a, echo_a)\nint_a <- sum(activs_a)\necho_b <- round(echo_content(activs_b, sm), 3)\ncor_b <- cor(probe_b, echo_b)\nint_b <- sum(activs_b)\necho_c <- round(echo_content(activs_c, sm), 3)\ncor_c <- cor(probe_c, echo_c)\nint_c <- sum(activs_c)\n\ndf <- data.frame(corr = c(cor_a, cor_b, cor_c), intensity = c(int_a, int_b, int_c))\nrownames(df) <- c(\"catA\", \"catB\", \"catC\")\nreturn(df)\n}\n\nI am close to replicating the Abstraction exercise in Hintzman (1986). I’ve made a mistake, however, as I am supposed to calculate prototype-echo correlations, not probe-echo correlations. I’ll need to rectify this, as well as amend the code to allow for 20 simulations, so that I can calculate mean prototype-echo correlations for the 3-, 6-, and 9-exemplar categories."
  },
  {
    "objectID": "posts/Hintzman3/index.html",
    "href": "posts/Hintzman3/index.html",
    "title": "Reproducing Hintzman’s MINERVA (Part 3)",
    "section": "",
    "text": "First (completed) attempt at the Abstraction exercise\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nset.seed(30)\nnum_feat <- 13\nnum_name <- 10\nnum_trace <- num_name + num_feat\nvalues <- c(rep(1, 50), rep(-1, 50))\n\nempty_feat <- rep(0, num_feat)\n\nabstraction <- function(num_a, num_b, num_c, num_distort) {\n\n# Generating prototype\n  \ngen_proto <- function() {\n   proto <- sample(values, num_trace, replace = TRUE)\n   return(proto)\n}\n\nproto_a <- gen_proto()\nproto_b <- gen_proto()\nproto_c <- gen_proto()\n\n# Generating exemplars with distortions\n\ngen_exemp <- function(proto, num_exemp, num_distort) {\n  \n  proto_copies <- matrix(rep(proto, num_exemp), nrow = num_exemp, ncol = num_trace, byrow = TRUE)\n  \n  name_matrix_ones <- matrix(1, nrow = num_exemp, ncol = num_name)\n  feat_matrix_distort <- t(replicate(n = num_exemp, sample(c(rep(1, num_feat - num_distort), rep(-1, num_distort)), num_feat)))\n  distort_filter <- cbind(name_matrix_ones, feat_matrix_distort)\n\n  exemp <- proto_copies * distort_filter\n  return(exemp)\n}\n  \n# Generating traces and probes\na <- gen_exemp(proto_a, num_a, num_distort)\nprobe_a <- c(a[1, 1:num_name], empty_feat)\nb <- gen_exemp(proto_b, num_b, num_distort)\nprobe_b <- c(b[1, 1:num_name], empty_feat)\nc <- gen_exemp(proto_c, num_c, num_distort)\nprobe_c <- c(c[1, 1:num_name], empty_feat)\n  \nsm <- rbind(a, b, c)\n  \n# Echo activation function\necho_activation <- function(probe, sec_mem) {\n  e_activs <- c()\n      for(i in 1:nrow(sec_mem)){\n          n_rel <- 0\n          temp_sim <- 0\n              for(j in 1:num_trace){\n                   current <- probe[j] * sec_mem[i, j]\n                   temp_sim <- current + temp_sim\n                          if(probe[j] != 0 & sec_mem[i, j] != 0) {\n                                     n_rel <- n_rel + 1\n      }\n}\ntrace_sim <- temp_sim/n_rel\ntrace_act <- trace_sim^3\ne_activs <- c(e_activs, trace_act)\n      }\n  return(e_activs)\n}\n\nactivs_a <- echo_activation(probe_a, sm)\nactivs_b <- echo_activation(probe_b, sm)\nactivs_c <- echo_activation(probe_c, sm)\n\n# Echo content function\n\necho_content <- function(acts, sec_mem) {\n  e_cont <- c()\n  for(j in 1:num_trace){\n    temp_cont <- 0\n    for(i in 1:nrow(sec_mem)){\n      current <- acts[i] * sec_mem[i, j]\n      temp_cont <- current + temp_cont\n    }\n    e_cont <- c(e_cont, temp_cont)\n  }\n  return(e_cont)\n}\n\n# Calculating echo intensity and probe-echo correlations\necho_a <- round(echo_content(activs_a, sm), 3)\ncor_a <- cor(proto_a, echo_a)\nint_a <- sum(activs_a)\necho_b <- round(echo_content(activs_b, sm), 3)\ncor_b <- cor(proto_b, echo_b)\nint_b <- sum(activs_b)\necho_c <- round(echo_content(activs_c, sm), 3)\ncor_c <- cor(proto_c, echo_c)\nint_c <- sum(activs_c)\n\ndf <- data.frame(corr = c(cor_a, cor_b, cor_c), intensity = c(int_a, int_b, int_c))\nrownames(df) <- c(\"catA\", \"catB\", \"catC\")\nreturn(df)\n}\n\nI had to rework the code so that the prototypes were actually the basis for the distorted exemplars. The code seems to work and generate the intended outcomes, but I’ll need to verify it with Matt.\nI’ll also need to ask if there is a way to return multiple outputs from this function i.e. for each of the 3 categories, I’ll need the prototype, the echo, the prototype-echo correlation, and the echo intensity. Perhaps returning a list would work?\nThe next step is to produce graphs like the ones in Hintzman (1986) comparing prototypes to echos."
  },
  {
    "objectID": "posts/Hintzman4/index.html",
    "href": "posts/Hintzman4/index.html",
    "title": "Reproducing Hintzman’s MINERVA (Part 4)",
    "section": "",
    "text": "Improving on the Abstraction exercise code and plotting prototypes and echoes\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nset.seed(30)\nnum_feat <- 13\nnum_name <- 10\nnum_trace <- num_name + num_feat\nvalues <- c(rep(1, 50), rep(-1, 50))\n\nempty_feat <- rep(0, num_feat)\n\nabstraction <- function(num_a, num_b, num_c, num_distort) {\n\n# Generating prototype\n  \ngen_proto <- function() {\n   proto <- sample(values, num_trace, replace = TRUE)\n   return(proto)\n}\n\nproto_a <- gen_proto()\nproto_b <- gen_proto()\nproto_c <- gen_proto()\n\n# Generating exemplars with distortions\n\ngen_exemp <- function(proto, num_exemp, num_distort) {\n  \n  proto_copies <- matrix(rep(proto, num_exemp), nrow = num_exemp, ncol = num_trace, byrow = TRUE)\n  \n  name_matrix_ones <- matrix(1, nrow = num_exemp, ncol = num_name)\n  feat_matrix_distort <- t(replicate(n = num_exemp, sample(c(rep(1, num_feat - num_distort), rep(-1, num_distort)), num_feat)))\n  distort_filter <- cbind(name_matrix_ones, feat_matrix_distort)\n\n  exemp <- proto_copies * distort_filter\n  return(exemp)\n}\n  \n# Generating traces and probes\na <- gen_exemp(proto_a, num_a, num_distort)\nprobe_a <- c(a[1, 1:num_name], empty_feat)\nb <- gen_exemp(proto_b, num_b, num_distort)\nprobe_b <- c(b[1, 1:num_name], empty_feat)\nc <- gen_exemp(proto_c, num_c, num_distort)\nprobe_c <- c(c[1, 1:num_name], empty_feat)\n  \nsm <- rbind(a, b, c)\n  \n# Echo activation function\necho_activation <- function(probe, sec_mem) {\n  e_activs <- c()\n      for(i in 1:nrow(sec_mem)){\n          n_rel <- 0\n          temp_sim <- 0\n              for(j in 1:num_trace){\n                   current <- probe[j] * sec_mem[i, j]\n                   temp_sim <- current + temp_sim\n                          if(probe[j] != 0 & sec_mem[i, j] != 0) {\n                                     n_rel <- n_rel + 1\n      }\n}\ntrace_sim <- temp_sim/n_rel\ntrace_act <- trace_sim^3\ne_activs <- c(e_activs, trace_act)\n      }\n  return(e_activs)\n}\n\nactivs_a <- echo_activation(probe_a, sm)\nactivs_b <- echo_activation(probe_b, sm)\nactivs_c <- echo_activation(probe_c, sm)\n\n# Echo content function\n\necho_content <- function(acts, sec_mem) {\n  e_cont <- c()\n  for(j in 1:num_trace){\n    temp_cont <- 0\n    for(i in 1:nrow(sec_mem)){\n      current <- acts[i] * sec_mem[i, j]\n      temp_cont <- current + temp_cont\n    }\n    e_cont <- c(e_cont, temp_cont)\n  }\n  return(e_cont)\n}\n\n# Calculating echo intensity and probe-echo correlations\necho_a <- round(echo_content(activs_a, sm), 3)\ncor_a <- cor(proto_a[(num_name + 1):num_trace], echo_a[(num_name + 1):num_trace])\nint_a <- sum(activs_a)\necho_b <- round(echo_content(activs_b, sm), 3)\ncor_b <- cor(proto_b[(num_name + 1):num_trace], echo_b[(num_name + 1):num_trace])\nint_b <- sum(activs_b)\necho_c <- round(echo_content(activs_c, sm), 3)\ncor_c <- cor(proto_c[(num_name + 1):num_trace], echo_c[(num_name + 1):num_trace])\nint_c <- sum(activs_c)\n\noutput_mat <- rbind(proto_a, echo_a, proto_b, echo_b, proto_c, echo_c)\nreturn(output_mat)\n}\n\nI edited the correlation code to reflect only the correlation for the 13 stimulus features (excluding the 10 name features; clearly, I misunderstood Hintzman the first time). Also, I changed the output to a matrix with the probes and echoes for the 3 categories. However, why do the echoes have values greater than 1 and less than -1? That’s not what Hintzman got.\n\nreplicate(20, abstraction(3,6,9,4))\n\n, , 1\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]  [,9]  [,10]\nproto_a -1.000  1.000  1.000  1.000 -1.000  1.000 -1.000 -1.000 1.000 -1.000\necho_a  -3.048  2.952  2.952  3.048 -3.048  3.048 -3.048 -2.952 2.952 -3.048\nproto_b  1.000  1.000  1.000 -1.000  1.000 -1.000  1.000 -1.000 1.000  1.000\necho_b   6.600  6.552  6.552 -6.600  6.600 -6.600  5.448 -6.552 5.400  5.448\nproto_c -1.000 -1.000 -1.000  1.000 -1.000  1.000  1.000  1.000 1.000  1.000\necho_c  -9.384 -9.384 -9.384  9.384 -9.384  9.384  8.616  9.384 8.616  8.616\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17] [,18] [,19]  [,20]\nproto_a -1.000 -1.000  1.000  1.000 -1.000 -1.000  1.000   1.0 1.000 -1.000\necho_a  -1.016  1.032  1.032  2.968  1.048 -3.000  1.016  -1.0 0.984 -0.984\nproto_b -1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000  -1.0 1.000 -1.000\necho_b   2.328 -4.072 -4.328  3.784 -5.816 -0.296 -1.816   0.2 1.544 -1.800\nproto_c -1.000  1.000  1.000 -1.000 -1.000  1.000 -1.000  -1.0 1.000 -1.000\necho_c  -5.128  1.256  5.256  2.744 -2.616  5.000 -2.872  -3.0 6.872 -2.872\n         [,21]  [,22]  [,23]\nproto_a  1.000  1.000  1.000\necho_a   1.000  3.032  3.032\nproto_b -1.000 -1.000 -1.000\necho_b   0.312 -4.216 -4.344\nproto_c -1.000  1.000  1.000\necho_c  -5.000  3.256  5.256\n\n, , 2\n\n         [,1]  [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]  [,9]  [,10]\nproto_a 1.000 1.000  1.000 -1.000 -1.000 -1.000  1.000 -1.000 1.000 -1.000\necho_a  3.072 3.072  2.928 -2.928 -3.072 -3.072  2.928 -2.928 3.072 -3.072\nproto_b 1.000 1.000 -1.000  1.000 -1.000  1.000  1.000  1.000 1.000  1.000\necho_b  6.576 6.576 -6.576  6.576 -6.576  5.424  5.424  6.576 6.576  5.424\nproto_c 1.000 1.000 -1.000  1.000 -1.000 -1.000 -1.000  1.000 1.000 -1.000\necho_c  9.408 9.408 -9.360  9.360 -9.408 -8.640 -8.592  9.360 9.408 -8.640\n         [,11] [,12]  [,13]  [,14]  [,15] [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000 -1.00 -1.000  1.000  1.000 -1.00  1.000  1.000 -1.000 -1.000\necho_a  -1.008 -0.96 -2.960  2.976  0.992 -0.96  0.944 -0.944 -1.024 -2.960\nproto_b  1.000  1.00  1.000  1.000  1.000 -1.00  1.000 -1.000 -1.000 -1.000\necho_b   3.936  2.32  2.320 -0.192  3.936  2.32  3.552 -1.552 -0.192  0.320\nproto_c  1.000  1.00  1.000 -1.000 -1.000  1.00 -1.000  1.000  1.000  1.000\necho_c  -0.752  5.12  5.104 -2.976 -0.736  5.12 -6.736  6.864 -3.008  4.976\n         [,21]  [,22]  [,23]\nproto_a -1.000  1.000  1.000\necho_a  -0.960  0.976 -0.976\nproto_b -1.000  1.000 -1.000\necho_b  -3.680  5.808 -3.808\nproto_c  1.000 -1.000  1.000\necho_c   4.736 -2.608  2.736\n\n, , 3\n\n           [,1]    [,2]    [,3]   [,4]   [,5]    [,6]    [,7]   [,8]    [,9]\nproto_a  -1.000  -1.000  -1.000 -1.000  1.000  -1.000  -1.000  1.000  -1.000\necho_a   -7.608  -7.608  -7.608  1.608  7.608  -7.608  -7.608  7.608  -7.608\nproto_b   1.000   1.000  -1.000  1.000  1.000  -1.000   1.000  1.000   1.000\necho_b    5.928   5.928  -6.072  6.072  6.072  -6.072   5.928  6.072   5.928\nproto_c  -1.000  -1.000  -1.000  1.000  1.000  -1.000  -1.000  1.000  -1.000\necho_c  -10.488 -10.488 -10.584  7.512 10.584 -10.584 -10.488 10.584 -10.488\n         [,10]  [,11]  [,12]  [,13]  [,14] [,15]  [,16]  [,17]  [,18]  [,19]\nproto_a  1.000 -1.000 -1.000 -1.000 -1.000 1.000  1.000  1.000  1.000 -1.000\necho_a   7.608 -4.584  2.536  0.536  0.488 4.584  1.464  1.560  3.512  0.536\nproto_b  1.000  1.000 -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000  1.000\necho_b   6.072  3.944 -3.976 -1.976 -2.008 6.056 -0.024 -1.960 -1.992  0.024\nproto_c  1.000 -1.000  1.000  1.000 -1.000 1.000 -1.000  1.000  1.000  1.000\necho_c  10.584 -7.480  3.480  2.472 -0.504 7.560 -1.464  4.472  2.520  2.488\n         [,20] [,21]  [,22]  [,23]\nproto_a  1.000 -1.00 -1.000 -1.000\necho_a   3.512 -0.44  1.560 -2.536\nproto_b  1.000  1.00  1.000  1.000\necho_b   2.008  2.04  2.040  1.976\nproto_c -1.000  1.00  1.000 -1.000\necho_c   2.552  3.48  4.504 -3.496\n\n, , 4\n\n          [,1]   [,2]   [,3]   [,4]  [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a  1.000 -1.000  1.000  1.000 1.000 -1.000 -1.000  1.000 -1.000 -1.000\necho_a   3.624 -3.624  3.624  3.624 2.376 -2.376 -3.624  2.472 -3.528 -3.528\nproto_b -1.000  1.000 -1.000 -1.000 1.000 -1.000  1.000 -1.000 -1.000 -1.000\necho_b  -6.600  6.600 -6.600 -6.600 6.552 -6.552  6.600 -5.448 -5.400 -5.400\nproto_c -1.000  1.000 -1.000 -1.000 1.000 -1.000  1.000  1.000  1.000  1.000\necho_c  -9.576  9.576 -9.576 -9.576 9.192 -9.192  9.576  8.424  8.808  8.808\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000  1.000  1.000  1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000\necho_a  -2.584  1.320 -1.464  3.192 -2.808 -3.336  3.208 -3.336 -2.952 -2.456\nproto_b  1.000 -1.000  1.000  1.000  1.000  1.000 -1.000  1.000  1.000  1.000\necho_b   3.576 -0.328  2.456 -0.216 -0.168  2.344 -2.216  2.344  1.960  3.448\nproto_c -1.000  1.000  1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000\necho_c  -6.552 -5.064  7.192 -3.192 -2.808  5.320 -3.320  5.320 -0.680 -8.552\n         [,21] [,22]  [,23]\nproto_a  1.000 1.000 -1.000\necho_a  -1.112 0.392  2.952\nproto_b  1.000 1.000 -1.000\necho_b   6.072 4.568 -1.960\nproto_c -1.000 1.000 -1.000\necho_c   1.448 9.192  0.680\n\n, , 5\n\n         [,1]   [,2]   [,3]   [,4]   [,5]   [,6]  [,7]   [,8]   [,9]  [,10]\nproto_a 1.000  1.000  1.000 -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000\necho_a  3.000  3.000  3.000 -3.000 -3.000 -3.000 3.000 -3.000 -3.000 -3.000\nproto_b 1.000  1.000  1.000  1.000  1.000 -1.000 1.000  1.000  1.000  1.000\necho_b  6.072  5.928  5.928  5.928  5.928 -6.072 6.072  6.072  6.072  6.072\nproto_c 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 1.000  1.000  1.000  1.000\necho_c  9.048 -8.952 -8.952 -8.952 -8.952 -9.048 9.048  9.048  9.048  9.048\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17] [,18]  [,19]  [,20]\nproto_a -1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000  1.00 -1.000  1.000\necho_a  -3.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000  3.00 -3.000  3.000\nproto_b  1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000  1.00  1.000 -1.000\necho_b   1.992 -3.992  3.960  6.024  0.024  0.056 -1.960 -0.04  4.024 -4.024\nproto_c  1.000  1.000 -1.000  1.000  1.000  1.000  1.000 -1.00  1.000 -1.000\necho_c  -0.984  0.968 -4.968  3.048  3.000  7.000  4.984 -5.00  3.032 -3.032\n         [,21] [,22]  [,23]\nproto_a -1.000 -1.00  1.000\necho_a  -1.000 -1.00  3.000\nproto_b  1.000  1.00 -1.000\necho_b   4.056  0.04 -0.008\nproto_c  1.000  1.00  1.000\necho_c   7.032  5.00 -1.000\n\n, , 6\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9] [,10]\nproto_a -1.000 -1.000 -1.000 -1.000  1.000 -1.000 -1.000  1.000 -1.000 1.000\necho_a  -2.928 -2.928 -3.072 -3.072  3.072 -2.928 -3.072  2.928 -3.072 3.072\nproto_b -1.000  1.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000  1.000 1.000\necho_b  -6.000  6.000 -6.000  6.000 -6.000 -6.000 -6.000 -6.000  6.000 6.000\nproto_c  1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000 1.000\necho_c   8.976  8.976 -9.024 -9.024  9.024  8.976 -9.024 -8.976 -9.024 9.024\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000  1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000  1.000 -1.000\necho_a   0.992 -1.024 -2.992 -1.024 -2.992  0.992  0.960  2.976 -0.944 -0.928\nproto_b  1.000 -1.000  1.000  1.000  1.000  1.000 -1.000  1.000  1.000 -1.000\necho_b   0.000 -6.000  4.000  0.000  4.000  4.000 -2.000  4.000  4.000  2.000\nproto_c -1.000 -1.000  1.000 -1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000\necho_c  -0.992 -3.008  0.976 -3.008  0.976 -0.992 -4.992 -2.976  6.992  8.992\n         [,21]  [,22]  [,23]\nproto_a -1.000 -1.000  1.000\necho_a  -2.928 -0.960  1.008\nproto_b -1.000 -1.000 -1.000\necho_b  -2.000  2.000 -4.000\nproto_c  1.000  1.000  1.000\necho_c   8.976  4.992  1.008\n\n, , 7\n\n          [,1]  [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a  1.000 1.000  1.000 -1.000  1.000 -1.000  1.000 -1.000  1.000  1.000\necho_a   2.688 3.456  3.312 -3.456  3.312 -3.456  2.688 -3.312  2.688  3.312\nproto_b -1.000 1.000  1.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000  1.000\necho_b  -6.384 5.616  6.768 -5.616  6.768 -5.616 -6.384 -6.768 -6.384  6.768\nproto_c  1.000 1.000 -1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000 -1.000\necho_c   9.408 8.640 -9.360 -8.640 -9.360 -8.640  9.408  9.360  9.408 -9.360\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18] [,19]  [,20]\nproto_a -1.000  1.000  1.000 -1.000  1.000 -1.000 -1.000  1.000 1.000  1.000\necho_a  -2.592  1.088 -1.040 -0.672 -0.864 -1.280 -2.736  3.040 1.168 -1.264\nproto_b  1.000  1.000  1.000  1.000  1.000 -1.000  1.000 -1.000 1.000 -1.000\necho_b   5.616  2.384  0.256  3.360  1.872 -3.872  3.744 -0.128 1.744 -4.000\nproto_c  1.000 -1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000 1.000 -1.000\necho_c   2.592 -5.120 -5.008  8.736  0.864 -2.752  0.720  5.024 4.880 -0.752\n         [,21]  [,22]  [,23]\nproto_a  1.000 -1.000 -1.000\necho_a   2.784 -0.992 -1.152\nproto_b -1.000  1.000  1.000\necho_b  -4.128 -0.128 -1.872\nproto_c  1.000  1.000 -1.000\necho_c   5.280  0.992 -2.880\n\n, , 8\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000\necho_a  -3.120  3.120  3.120  3.120  2.880 -3.024 -3.024 -2.880 -2.976 -2.976\nproto_b -1.000  1.000  1.000  1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000\necho_b  -6.096  6.096  6.096  6.096 -6.048  5.904  5.904  6.048 -5.952 -5.952\nproto_c  1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000\necho_c   9.072 -9.072 -9.072 -9.072  9.024  8.976  8.976 -9.024 -8.928 -8.928\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000 -1.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000  1.000\necho_a   1.056 -3.008  3.056  3.008 -2.992 -0.976 -0.992 -0.944 -0.960 -1.040\nproto_b  1.000  1.000  1.000  1.000  1.000 -1.000  1.000  1.000  1.000  1.000\necho_b   4.032  1.952  2.064  2.016  1.968 -1.968  3.968  4.016  2.016 -0.048\nproto_c -1.000  1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000  1.000\necho_c  -3.040  3.008 -5.040  0.960  1.008 -4.976  2.976 -3.024 -3.008  5.008\n         [,21]  [,22]  [,23]\nproto_a -1.000  1.000  1.000\necho_a  -2.960  2.928  1.056\nproto_b  1.000 -1.000  1.000\necho_b   2.000 -0.048  4.032\nproto_c -1.000  1.000 -1.000\necho_c  -2.992  8.976 -3.040\n\n, , 9\n\n          [,1]   [,2]   [,3]   [,4]  [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a  1.000  1.000  1.000 -1.000 1.000  1.000  1.000 -1.000 -1.000  1.000\necho_a   3.120  3.120  2.976 -3.120 2.880  3.024  3.024 -2.880 -3.120  2.976\nproto_b -1.000 -1.000 -1.000  1.000 1.000  1.000  1.000 -1.000  1.000 -1.000\necho_b  -6.096 -6.096 -5.952  6.096 6.048  5.904  5.904 -6.048  6.096 -5.952\nproto_c -1.000 -1.000  1.000  1.000 1.000 -1.000 -1.000 -1.000  1.000  1.000\necho_c  -9.072 -9.072  8.928  9.072 9.024 -8.976 -8.976 -9.024  9.072  8.928\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19] [,20]\nproto_a  1.000  1.000 -1.000 -1.000  1.000  1.000  1.000  1.000  1.000 1.000\necho_a   0.992  2.976 -0.944 -0.896  1.024 -0.992  2.976  2.992  3.008 0.992\nproto_b  1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000  1.000 1.000\necho_b   3.968 -1.984 -0.048 -6.048 -2.016  1.984  5.952 -3.984 -0.032 0.000\nproto_c  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000  1.000 -1.000 1.000\necho_c  -2.976  4.960 -6.992 -7.040 -1.024 -2.976 -2.976  4.944 -1.024 0.992\n         [,21]  [,22]  [,23]\nproto_a  1.000  1.000 -1.000\necho_a   1.040 -3.056 -1.056\nproto_b -1.000  1.000  1.000\necho_b   1.936  2.064  4.032\nproto_c -1.000  1.000  1.000\necho_c  -6.992  5.040  3.040\n\n, , 10\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9] [,10]\nproto_a -1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000 1.000\necho_a  -2.928 -2.928  3.072 -3.072  3.072 -3.072 -3.072  3.072  2.928 2.928\nproto_b  1.000  1.000 -1.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000 1.000\necho_b   6.576  6.576 -5.424 -6.576  6.576 -6.576 -6.576 -5.424 -6.576 5.424\nproto_c -1.000 -1.000 -1.000  1.000 -1.000  1.000  1.000 -1.000  1.000 1.000\necho_c  -9.360 -9.360 -8.640  9.408 -9.408  9.408  9.408 -8.640  9.360 8.592\n         [,11]  [,12] [,13]  [,14]  [,15]  [,16]  [,17]  [,18] [,19]  [,20]\nproto_a -1.000 -1.000 -1.00  1.000 -1.000  1.000  1.000  1.000 1.000 -1.000\necho_a  -2.992 -1.024 -2.96 -2.944 -0.944  1.008  0.976  1.040 2.944 -0.960\nproto_b  1.000  1.000  1.00  1.000  1.000 -1.000 -1.000  1.000 1.000 -1.000\necho_b   6.064  1.808  6.32  0.448  4.448 -1.936 -2.192  2.320 3.552  4.320\nproto_c -1.000  1.000 -1.00 -1.000 -1.000  1.000  1.000 -1.000 1.000 -1.000\necho_c  -1.360  2.880 -5.36 -6.976 -7.248 -0.880  3.120 -5.136 6.720 -5.248\n         [,21]  [,22]  [,23]\nproto_a  1.000 -1.000 -1.000\necho_a  -1.024 -1.008 -2.992\nproto_b -1.000  1.000 -1.000\necho_b  -2.192  3.936  0.064\nproto_c  1.000 -1.000 -1.000\necho_c   3.136  0.752 -0.976\n\n, , 11\n\n          [,1]   [,2]   [,3]  [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000  1.000  1.000 1.000  1.000 -1.000 -1.000  1.000 -1.000 -1.000\necho_a  -2.424  3.576  3.576 3.576  3.576 -3.576 -3.576  2.424 -3.576 -2.424\nproto_b  1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000  1.000  1.000 -1.000\necho_b   5.928 -6.072 -6.072 5.928 -6.072 -5.928 -5.928  6.072  6.072 -6.072\nproto_c  1.000  1.000  1.000 1.000  1.000 -1.000 -1.000 -1.000 -1.000  1.000\necho_c   8.760  9.240  9.240 9.144  9.240 -9.144 -9.144 -8.856 -9.240  8.856\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18] [,19]  [,20]\nproto_a -1.000  1.000  1.000 -1.000 -1.000 -1.000  1.000 -1.000  1.00  1.000\necho_a  -3.064  2.808  0.552 -0.936 -2.936 -2.808  0.808  0.808  1.32  1.448\nproto_b  1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000  1.000 -1.00  1.000\necho_b  -1.992 -3.976  6.056  3.992  1.992 -6.024 -1.976  2.024 -2.04 -0.056\nproto_c -1.000 -1.000 -1.000 -1.000 -1.000  1.000 -1.000 -1.000  1.00  1.000\necho_c  -1.176 -2.776 -6.984  0.904  0.792  2.856 -2.920 -2.952  5.08  7.064\n         [,21]  [,22] [,23]\nproto_a -1.000 -1.000 1.000\necho_a   0.808  1.576 1.192\nproto_b  1.000 -1.000 1.000\necho_b   2.024 -0.072 1.976\nproto_c -1.000  1.000 1.000\necho_c  -2.952  9.064 3.048\n\n, , 12\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000 -1.000  1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000\necho_a  -3.048 -2.952  3.048 -3.048 -2.952  3.048 -3.048  2.952 -3.048 -2.952\nproto_b -1.000  1.000  1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000  1.000\necho_b  -6.024  5.976  6.024 -6.024  5.976  6.024 -6.024 -5.976 -6.024  5.976\nproto_c  1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000  1.000\necho_c   9.000 -9.000 -9.000 -9.000 -9.000 -9.000 -9.000 -9.000 -9.000  9.000\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a  1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000\necho_a   2.968 -1.032 -1.016 -0.984 -1.048 -2.968 -3.000  3.000  1.016 -3.000\nproto_b -1.000 -1.000 -1.000  1.000 -1.000  1.000  1.000 -1.000  1.000 -1.000\necho_b  -3.976 -4.008 -2.008  1.992 -6.008  3.976 -0.024  0.024  2.008 -0.024\nproto_c  1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000\necho_c  -1.000  3.000 -1.000 -3.000  7.000  1.000 -3.000 -3.000 -1.000 -5.000\n         [,21]  [,22]  [,23]\nproto_a -1.000  1.000 -1.000\necho_a  -1.032  0.968 -1.016\nproto_b -1.000 -1.000  1.000\necho_b  -4.008 -3.992 -2.008\nproto_c -1.000  1.000 -1.000\necho_c  -7.000  7.000 -5.000\n\n, , 13\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a  1.000  1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000\necho_a   3.384  3.384  3.384  3.384  2.616  2.616 -3.384 -2.616 -3.384 -3.384\nproto_b -1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000 -1.000  1.000  1.000\necho_b  -6.120 -6.120 -6.264 -6.264  5.880  5.880  6.264 -5.736  6.264  6.120\nproto_c -1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000  1.000\necho_c  -8.952 -8.952  9.048  9.048 -9.048 -9.048 -9.048 -8.952 -9.048  8.952\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000  1.000  1.000 -1.000 -1.000  1.000 -1.000 -1.000  1.000 -1.000\necho_a  -3.256 -1.128 -1.256 -3.000 -3.256  3.384 -0.872 -1.128  1.128 -1.128\nproto_b  1.000  1.000  1.000 -1.000  1.000 -1.000  1.000  1.000 -1.000  1.000\necho_b   4.152  2.056  4.024  0.216  4.168 -6.232 -1.928  2.056 -2.024  2.024\nproto_c  1.000 -1.000  1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000  1.000\necho_c   4.968  0.984  4.968 -3.000  2.968  5.048 -0.984  0.984 -4.984  4.984\n         [,21]  [,22]  [,23]\nproto_a -1.000  1.000 -1.000\necho_a  -0.744  1.000  0.872\nproto_b -1.000  1.000  1.000\necho_b  -3.976 -0.104  1.992\nproto_c  1.000  1.000 -1.000\necho_c   5.032  5.000 -7.016\n\n, , 14\n\n          [,1]   [,2]   [,3]    [,4]   [,5]    [,6]    [,7]  [,8]   [,9]\nproto_a  1.000 -1.000 -1.000  -1.000  1.000  -1.000  -1.000 1.000  1.000\necho_a   1.056 -4.944 -4.944  -4.944  1.056  -4.944  -4.944 4.944  4.944\nproto_b  1.000 -1.000 -1.000   1.000  1.000   1.000   1.000 1.000 -1.000\necho_b   6.576 -5.424 -5.424   6.576  6.576   6.576   6.576 5.424 -6.576\nproto_c -1.000 -1.000 -1.000  -1.000 -1.000  -1.000  -1.000 1.000  1.000\necho_c  -8.736 -9.264 -9.264 -10.032 -8.736 -10.032 -10.032 9.264 10.032\n          [,10]  [,11] [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18] [,19]\nproto_a  -1.000  1.000 1.000  1.000 -1.000 -1.000  1.000 -1.000 -1.000 -1.00\necho_a   -4.944  1.216 0.080  1.488 -0.784 -0.352  1.216  0.512  0.080 -1.92\nproto_b   1.000 -1.000 1.000 -1.000  1.000 -1.000  1.000 -1.000  1.000 -1.00\necho_b    6.576 -4.064 3.680  0.448  3.936 -6.192  1.936 -4.448  1.680 -2.32\nproto_c  -1.000  1.000 1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000  1.00\necho_c  -10.032  1.472 4.528 -6.352  0.528  3.168  1.088  7.040  4.656  4.48\n         [,20]  [,21]  [,22]  [,23]\nproto_a -1.000 -1.000  1.000  1.000\necho_a  -4.512 -3.216 -2.080 -2.080\nproto_b  1.000 -1.000 -1.000  1.000\necho_b   0.448 -3.936  0.320 -1.680\nproto_c -1.000 -1.000 -1.000 -1.000\necho_c  -7.648 -1.392 -5.216 -5.088\n\n, , 15\n\n          [,1]  [,2]   [,3]   [,4]  [,5]  [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000 1.000  1.000 -1.000 1.000 1.000  1.000  1.000 -1.000  1.000\necho_a  -3.024 3.120  2.976 -3.120 3.120 3.120  2.976  2.880 -2.880  3.024\nproto_b  1.000 1.000  1.000 -1.000 1.000 1.000  1.000 -1.000  1.000 -1.000\necho_b   5.904 6.096  5.952 -6.096 6.096 6.096  5.952 -6.048  6.048 -5.904\nproto_c -1.000 1.000 -1.000 -1.000 1.000 1.000 -1.000 -1.000  1.000  1.000\necho_c  -8.976 9.072 -8.928 -9.072 9.072 9.072 -8.928 -9.024  9.024  8.976\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000 -1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000\necho_a   0.944 -1.040 -0.992  1.008  3.008  0.912 -3.024  0.944 -2.992  1.072\nproto_b -1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000 -1.000  1.000  1.000\necho_b  -2.032 -4.016  5.952  0.016  5.984 -4.048 -4.016 -4.016 -3.984  0.080\nproto_c -1.000 -1.000 -1.000 -1.000 -1.000 -1.000  1.000 -1.000  1.000  1.000\necho_c  -5.008 -1.040 -4.960  1.008 -4.928 -7.024  0.944 -3.024  4.944  9.008\n         [,21]  [,22]  [,23]\nproto_a  1.000 -1.000  1.000\necho_a   3.024 -1.024  2.960\nproto_b  1.000 -1.000 -1.000\necho_b   2.032 -2.016 -0.016\nproto_c -1.000 -1.000 -1.000\necho_c   1.040 -1.024 -4.976\n\n, , 16\n\n          [,1]  [,2]   [,3]   [,4]   [,5]  [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000 1.000 -1.000 -1.000  1.000 1.000  1.000 -1.000  1.000 -1.000\necho_a  -2.952 3.048 -3.048 -3.048  2.952 3.048  3.048 -2.952  2.952 -3.048\nproto_b  1.000 1.000 -1.000 -1.000 -1.000 1.000  1.000  1.000 -1.000 -1.000\necho_b   5.976 6.024 -6.024 -6.024 -5.976 6.024  6.024  5.976 -5.976 -6.024\nproto_c  1.000 1.000 -1.000  1.000  1.000 1.000 -1.000  1.000  1.000  1.000\necho_c   9.000 9.000 -9.000  9.000  9.000 9.000 -9.000  9.000  9.000  9.000\n        [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a 1.000 -1.000  1.000 -1.000  1.000 -1.000  1.000  1.000 -1.000  1.000\necho_a  3.000 -2.984 -0.984 -1.016 -0.968  1.000 -1.016  1.032 -3.000  0.968\nproto_b 1.000  1.000  1.000 -1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000\necho_b  0.024  1.976  1.992 -2.008  3.992  0.008 -2.008  4.008 -0.024 -3.992\nproto_c 1.000 -1.000  1.000  1.000  1.000 -1.000  1.000 -1.000 -1.000  1.000\necho_c  3.000 -5.000  5.000  3.000  5.000 -3.000  3.000 -3.000 -1.000  3.000\n        [,21]  [,22]  [,23]\nproto_a 1.000  1.000  1.000\necho_a  3.032  2.968  0.984\nproto_b 1.000 -1.000 -1.000\necho_b  4.024 -3.976 -1.992\nproto_c 1.000 -1.000 -1.000\necho_c  1.000 -5.000 -5.000\n\n, , 17\n\n          [,1]  [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a  1.000 1.000  1.000  1.000  1.000  1.000 -1.000  1.000  1.000 -1.000\necho_a   3.048 2.952  2.952  2.952  3.048  3.048 -3.048  2.952  3.048 -3.048\nproto_b -1.000 1.000  1.000  1.000 -1.000 -1.000  1.000  1.000 -1.000  1.000\necho_b  -6.600 5.400  6.552  6.552 -6.600 -6.600  6.600  6.552 -5.448  5.448\nproto_c  1.000 1.000 -1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000  1.000\necho_c   9.384 8.616 -9.384 -9.384  9.384  9.384 -9.384 -9.384 -8.616  8.616\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16] [,17]  [,18]  [,19]  [,20]\nproto_a -1.000 -1.000  1.000 -1.000  1.000 -1.000 1.000 -1.000 -1.000 -1.000\necho_a   0.968  1.000  1.032  0.968  0.968 -3.000 2.968 -0.984 -3.048 -1.000\nproto_b -1.000  1.000 -1.000  1.000  1.000  1.000 1.000 -1.000  1.000  1.000\necho_b   3.800  0.568 -4.072  3.800  4.056  0.088 3.784 -2.440  5.576  0.072\nproto_c  1.000 -1.000 -1.000 -1.000 -1.000 -1.000 1.000  1.000  1.000  1.000\necho_c   2.744 -9.000  1.256  2.744 -1.256 -1.000 2.744  7.128  6.616 -1.000\n         [,21]  [,22]  [,23]\nproto_a  1.000  1.000 -1.000\necho_a  -1.048  3.016 -3.016\nproto_b  1.000 -1.000  1.000\necho_b   6.456 -1.704  2.472\nproto_c -1.000 -1.000 -1.000\necho_c  -7.384 -4.872 -7.128\n\n, , 18\n\n          [,1]   [,2]   [,3]   [,4]   [,5]   [,6]  [,7]   [,8]   [,9]  [,10]\nproto_a -1.000 -1.000 -1.000  1.000 -1.000  1.000 1.000  1.000 -1.000  1.000\necho_a  -2.616 -3.384 -3.384  3.384 -3.384  3.384 2.616  3.384 -3.384  2.616\nproto_b -1.000  1.000  1.000 -1.000  1.000 -1.000 1.000 -1.000  1.000  1.000\necho_b  -5.880  6.264  6.120 -6.264  6.120 -6.120 5.880 -6.264  6.264  5.736\nproto_c -1.000  1.000 -1.000 -1.000 -1.000  1.000 1.000 -1.000  1.000 -1.000\necho_c  -9.048  9.048 -8.952 -9.048 -8.952  8.952 9.048 -9.048  9.048 -8.952\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20]\nproto_a -1.000 -1.000 -1.000  1.000 -1.000  1.000  1.000 -1.000  1.000 -1.000\necho_a  -2.872 -1.256  0.616 -0.872 -0.744  3.000  1.000 -1.384  1.128 -3.000\nproto_b -1.000  1.000  1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000 -1.000\necho_b  -1.864  4.072  5.976 -2.008 -3.928 -0.248 -0.008  6.088 -2.072  0.136\nproto_c -1.000  1.000  1.000 -1.000  1.000 -1.000  1.000 -1.000 -1.000 -1.000\necho_c  -7.016  1.032  5.048 -9.016  0.968 -7.000  7.000  3.048 -1.016 -7.000\n         [,21]  [,22]  [,23]\nproto_a  1.000  1.000  1.000\necho_a   1.000 -1.128  3.384\nproto_b -1.000  1.000 -1.000\necho_b  -0.072  2.072 -6.216\nproto_c  1.000  1.000 -1.000\necho_c  -1.000  1.016 -3.048\n\n, , 19\n\n          [,1]  [,2]  [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10]\nproto_a -1.000 1.000 1.000 -1.000  1.000  1.000 -1.000 -1.000 -1.000  1.000\necho_a  -1.104 4.896 4.896 -4.896  4.992  4.992 -4.992 -4.896 -1.104  4.992\nproto_b  1.000 1.000 1.000 -1.000 -1.000 -1.000  1.000 -1.000  1.000 -1.000\necho_b   6.096 6.048 6.048 -6.048 -5.952 -5.952  5.952 -6.048  6.096 -5.952\nproto_c  1.000 1.000 1.000 -1.000  1.000  1.000 -1.000 -1.000  1.000  1.000\necho_c   8.400 9.696 9.696 -9.696  9.600  9.600 -9.600 -9.696  8.400  9.600\n         [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17] [,18]  [,19]  [,20]\nproto_a -1.000  1.000 -1.000  1.000  1.000 -1.000 -1.000 1.000  1.000  1.000\necho_a  -2.736  0.368 -1.632  1.664 -0.064 -1.664  1.904 4.928  2.800  0.336\nproto_b -1.000 -1.000 -1.000 -1.000 -1.000  1.000  1.000 1.000 -1.000  1.000\necho_b  -5.968 -2.032 -2.016 -1.984 -2.048  1.984  1.936 2.048 -2.032  1.968\nproto_c  1.000 -1.000 -1.000  1.000 -1.000 -1.000 -1.000 1.000 -1.000 -1.000\necho_c   0.304 -2.800 -3.232  3.200 -4.800 -3.200 -4.336 9.664 -0.368 -2.768\n         [,21]  [,22] [,23]\nproto_a  1.000  1.000 1.000\necho_a   0.352  0.368 1.616\nproto_b -1.000 -1.000 1.000\necho_b  -0.032 -2.032 4.016\nproto_c -1.000 -1.000 1.000\necho_c  -2.784 -2.800 3.248\n\n, , 20\n\n          [,1]    [,2]   [,3]    [,4]   [,5]   [,6]    [,7]    [,8]   [,9]\nproto_a  1.000   1.000 -1.000   1.000  1.000 -1.000  -1.000  -1.000 -1.000\necho_a   3.024   3.120 -3.120   3.120  2.880 -3.120  -2.880  -2.880 -3.120\nproto_b -1.000   1.000 -1.000   1.000 -1.000 -1.000   1.000   1.000 -1.000\necho_b  -4.032   7.968 -7.968   7.968 -7.920 -7.968   7.920   7.920 -7.968\nproto_c -1.000  -1.000  1.000  -1.000  1.000  1.000  -1.000  -1.000  1.000\necho_c  -7.728 -10.320 10.320 -10.320 10.272 10.320 -10.272 -10.272 10.320\n         [,10]  [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]\nproto_a -1.000 -1.000 -1.000  1.000 -1.000 -1.000 -1.000  1.000  1.000  1.000\necho_a  -2.976 -1.056 -0.944 -1.040 -1.024 -2.912  3.056  2.992  2.992  2.992\nproto_b -1.000 -1.000  1.000  1.000 -1.000  1.000  1.000  1.000 -1.000 -1.000\necho_b  -4.080 -1.520  3.072 -2.656 -3.792  5.488  3.104 -3.328 -1.760 -4.896\nproto_c -1.000  1.000 -1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000\necho_c  -7.680  7.008 -5.424  3.440 -0.128 -7.840 -5.456 -2.160 -0.592 -3.728\n         [,20]  [,21]  [,22]  [,23]\nproto_a -1.000  1.000 -1.000  1.000\necho_a  -2.992  3.008  0.912 -0.944\nproto_b  1.000 -1.000 -1.000  1.000\necho_b   4.896 -1.328 -5.504  4.640\nproto_c -1.000 -1.000  1.000 -1.000\necho_c   3.728 -2.592  7.856 -3.856\n\n\nUsing the replicate function allows me to simulate multiple participants easily.\nNext, I need to plot the prototypes against the echoes in a “histogram”. After several failed attempts at doing so with ggplot, I finally came to the conclusion that I had to use the basic R plotting package. An example of the code is below.\n\ngraph_in <- abstraction(3, 6, 9, 4)\npar = (mfrow = c (1, 2))\nbarplot(graph_in[5, ], main = \"proto_a\")\n\n\n\nbarplot(graph_in[6, ], main = \"echo_a\")\n\n\n\n\nThe code works, though it seems to indicate that the name features are a little different in the echo than in the probe. That might make sense, since the probe would not be highly similar to traces from a different category, which could affect the “purity” of the echo.\nI haven’t figured out a way to write a function to easily churn out the 6 graphs. Functions only return 1 output, and I’m not sure the basic plotting package in R allows for saving a graph containing multiple layers as a variable."
  }
]